#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#    
#    http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.



# RUN TIME PROPERTIES
# -------------------

# Sample custom content and index data location
# This will create alf_data Relative to appserver run folder
# In this default file we take the property from the POM (for compatibility with local tomcat and jboss deployments) but it can also be edited here.
dir.root=${alfresco.data.location}
# Allowed values are: NONE, AUTO, FULL
index.recovery.mode=NONE
# As we run embedded, we set Lucene
# TODO: Find a better solution for indexing, as buildonly (embedded Lucene) is deprecated and going to be removed soon
#index.subsystem.name=noindex
#index.subsystem.name=solr
#index.subsystem.name=solr4
index.subsystem.name=buildonly


#dir.keystore=.
#keystore.password=storepassword
#metadata.password=metapassword

# Fail or not when there are node integrity checker errors
integrity.failOnError=true

# Database connection properties
# These are also filtered from Maven at build time from POM properties. 
# Alternatively you can directly define them directly here
db.driver=${alfresco.db.datasource.class}
db.url=${alfresco.db.url}
db.username=${alfresco.db.username}
db.password=${alfresco.db.password}
db.pool.initial=10
db.pool.max=100

# File servers related properties
# For local builds we disable CIFS and FTP. Edit the following property to reenable them
cifs.enabled=false

ftp.enabled=false
ftp.port=1121
ftp.authenticator=alfresco

authentication.chain=ldap1:ldap

# Sync settings (every minute, allow delete, full sync every time while debugging/testing)
synchronization.synchronizeChangesOnly=false
synchronization.import.cron=1 * * * * ?
synchronization.allowDeletions=true
synchronization.syncOnStartup=true


# Allow ldap for auth, no guest logins
ldap.authentication.active=true
ldap.authentication.allowGuestLogin=false

# We want the raw username, only need to fiddle with this for raw LDAP auth
ldap.authentication.userNameFormat=
ldap.authentication.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory

# URL and auth type (digest, simple etc) for the AD server
ldap.authentication.java.naming.provider.url=ldap://ldap.forumsys.com
ldap.authentication.java.naming.security.authentication=simple

# Standard settings, no sure if we need this
ldap.authentication.escapeCommasInBind=false
ldap.authentication.escapeCommasInUid=false
ldap.authentication.defaultAdministratorUserNames=read-only-admin
ldap.authentication.java.naming.read.timeout=0

# Enable LDAP sync
ldap.synchronization.active=true

# AD user and pass to use for doing sync
ldap.synchronization.java.naming.security.authentication=simple
ldap.synchronization.java.naming.security.principal=cn\=read-only-admin,dc\=example,dc\=com
ldap.synchronization.java.naming.security.credentials=password


ldap.synchronization.queryBatchSize=1000
ldap.synchronization.attributeBatchSize=0
ldap.synchronization.groupType=groupOfUniqueNames
ldap.synchronization.personType=inetOrgPerson
ldap.synchronization.groupQuery=(objectclass\=groupOfUniqueNames)
ldap.synchronization.personQuery=(objectClass\=inetOrgPerson)

# The location of groups and query for diffs
ldap.synchronization.groupSearchBase=ou\=scientists,dc\=example,dc\=com
ldap.synchronization.groupDifferentialQuery=(&(objectclass\=groupOfUniqueNames)(!(modifyTimestamp<\={0})))

# The location of users and query for diffs
ldap.synchronization.userSearchBase=dc\=example,dc\=com
ldap.synchronization.personDifferentialQuery=(&(objectclass\=inetOrgPerson)(!(modifyTimestamp<\={0})))

# Match AD properties with properties to cm:user
ldap.synchronization.groupMemberAttributeName=uniqueMember
ldap.synchronization.enableProgressEstimation=true


#ldap.synchronization.modifyTimestampAttributeName=modifyTimestamp
#ldap.synchronization.timestampFormat=yyyyMMddHHmmss'.0Z'
#ldap.synchronization.userIdAttributeName=sAMAccountName
#ldap.synchronization.userFirstNameAttributeName=givenName
#ldap.synchronization.userLastNameAttributeName=sn
#ldap.synchronization.userEmailAttributeName=mail
#ldap.synchronization.userOrganizationalIdAttributeName=o
#ldap.synchronization.defaultHomeFolderProvider=userHomesHomeFolderProvider
#ldap.synchronization.groupIdAttributeName=name
#ldap.synchronization.groupDisplayNameAttributeName=name
#ldap.synchronization.userMobileAttributeName=mobile
